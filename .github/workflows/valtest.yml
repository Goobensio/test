# This is a basic workflow to help you get started with Actions

name: validate-ci-test
# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  pull_request:
    types: [labeled, unlabeled, opened, reopened, edited, ready_for_review, synchronize]
    branches-ignore:
      - master #'!main'
      - '!*'
  push:
    branches-ignore:
      - master
      - '*' #'!*'
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
#env:
#  GITHUB_PAGES_REPO: rookout/helm-charts
jobs:
#   verify-label-exist:
#     if: ${{ github.event.label.name != 'bug'}} # Lets say for example that bug is valid
#     runs-on: ubuntu-18.04
#     steps:
#       - uses: actions/checkout@v2
#       - name: check for labels
#         run: |
#           echo Valid label does not exist
#           exit 1 "failed to find label"
  build-job:
    #if: ${{ github.event.label.name == 'bug'}}
    #echo "::set-output name=action_fruit::strawberry"
    # The type of runner that the job will run on
    runs-on: ubuntu-18.04
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Check for valid label
        #if: ${{ github.event.label.name != 'bug'}} # Does not work as contains, event label
        if: ${{ !contains( github.event.pull_request.labels.*.name, 'controller') && !contains( github.event.pull_request.labels.*.name, 'datastore') && !contains( github.event.pull_request.labels.*.name, 'operator') && !contains( github.event.pull_request.labels.*.name, 'global_change') }}
        uses: actions/github-script@v3
        with:
         script: |
             core.error
             core.setFailed('valid label does not exist, please add one')
      - name: comment pls
        uses: actions/github-script@v3
        with:
          script: |
            # Create comment body as Markdown

            var msg = `ðŸ‘‹ Thanks for participating! I will review as soon as possible, usually within a few hours.

            **Watch for notifications** as I may request some small changes to make sure this meets the guidelines.`

            # Get pull request description
            var body = context.payload.pull_request.body

            # If `body` exists, check for conditions
            # related to being from a contributor
            if(body) {
              var isContribution = body.contains('New Submission')
              var incompleteGuidelines = body.contains('[]')
            }

            if(isContribution) {
              # Create comment
              github.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: msg
              })
              }
            }
#       - name: comment on failure
#         uses: quipper/comment-failure-action@v0.1.1
#         with:
#           message: "???? failure"
          #api-token: ${{ secrets.YOUR_GITHUB_TOKEN }} # Replace with your secret's name
#       - name: Comment on PR
#         uses: thollander/actions-comment-pull-request@v1        
#         with:
#           message: 'basic error???'
      #- with:
      #    valid-labels: 'bug, enhancement'
      #    invalid-labels: 'help wanted, invalid'
      # Runs a single command using the runners shell
        #if: ${{ github.event.label.name == 'bug'}}
      - name: Validate Charts
        run: |
          sudo sh install-helm.sh
          alias helm=/tmp/helm/bin/linux-amd64/helm
          sudo helm template charts/controller -f charts/controller/values.yaml
          sudo helm template charts/datastore -f charts/datastore/values.yaml
      - name: Validate Helm charts and compare with labels
        run: |
          sudo apt install jq curl -y
          echo $PR_NUMBER
          echo $GITHUB_PAGES_REPO
          echo $GITHUB_BRANCH
          sudo sh validate.sh $GITHUB_PAGES_REPO $PR_NUMBER $GITHUB_BRANCH $GITHUB_PAGES_TEST
        env:
          GITHUB_PAGES_REPO: rookout/helm-charts
          GITHUB_PAGES_TEST: Goobensio/test
          PR_NUMBER: ${{ github.event.number }}
          GITHUB_BRANCH: ${{ github.head_ref }}
