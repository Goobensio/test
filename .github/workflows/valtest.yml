# This is a basic workflow to help you get started with Actions

name: validate-ci-test
# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  pull_request:
    types: [labeled, unlabeled, opened, reopened, edited, ready_for_review, synchronize]
    branches-ignore:
      - master #'!main'
      - '!*'
  push:
    branches-ignore:
      - master
      - '!*'
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
#env:
#  GITHUB_PAGES_REPO: rookout/helm-charts
jobs:
#   verify-label-exist:
#     if: ${{ github.event.label.name != 'bug'}} # Lets say for example that bug is valid
#     runs-on: ubuntu-18.04
#     steps:
#       - uses: actions/checkout@v2
#       - name: check for labels
#         run: |
#           echo Valid label does not exist
#           exit 1 "failed to find label"
  build-job:
    #if: ${{ github.event.label.name == 'bug'}}
    #echo "::set-output name=action_fruit::strawberry"
    # The type of runner that the job will run on
    runs-on: ubuntu-18.04
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Check for valid label
        #if: ${{ github.event.label.name != 'bug'}} # Does not work as contains, event label
        if: ${{ !contains( github.event.pull_request.labels.*.name, 'controller') && !contains( github.event.pull_request.labels.*.name, 'datastore') && !contains( github.event.pull_request.labels.*.name, 'operator') && !contains( github.event.pull_request.labels.*.name, 'global_change') }}

        #uses: actions/checkout@v2
#         uses: peter-evans/create-or-update-comment@a35cf36e5301d70b76f316e867e7788a55a31dae
#         with:
#           issue-number: ${{ github.event.issue.number }}
#           body: |
#             Please add a valid label to the pull request based on what you changed.
#             exit 1 "failed to find valid label"
        uses: actions/github-script@v3
        with:
         script: |
             core.error
             core.setFailed('valid label does not exist, please add one')
              
#       - name: Extract branch name on push
#         if: github.event_name != 'pull_request'
#         shell: bash
#         run: sudo echo "::set-env name=GITHUB_BRANCH::$(echo ${GITHUB_REF#refs/heads/})"
#         id: extract_branch

#       - name: Extract branch name on pull request
#         if: github.event_name == 'pull_request'
#         run: sudo echo "::set-env name=GITHUB_BRANCH::$(echo ${GITHUB_HEAD_REF})"

#       - name: Print branch name
#         run: echo 'The branch name is' $GITHUB_BRANCH
 
        
#       - name: check for labels
#         run: |
#           echo Valid label does not exist
#           exit 1 "failed to find label"
      #- with:
      #    valid-labels: 'bug, enhancement'
      #    invalid-labels: 'help wanted, invalid'
      # Runs a single command using the runners shell
        #if: ${{ github.event.label.name == 'bug'}}
      - name: Validate Charts
        run: |
          sudo sh install-helm.sh
          alias helm=/tmp/helm/bin/linux-amd64/helm
          sudo helm template charts/controller -f charts/controller/values.yaml
          sudo helm template charts/datastore -f charts/datastore/values.yaml
      - name: Validate Helm charts and compare with labels
        run: |
          sudo apt install jq curl -y
          echo $PR_NUMBER
          echo $GITHUB_PAGES_REPO
          echo $GITHUB_BRANCH
          sudo sh validate.sh $GITHUB_PAGES_REPO $PR_NUMBER $GITHUB_BRANCH
        env:
          GITHUB_PAGES_REPO: Goobensio/test #rookout/helm-charts
          PR_NUMBER: ${{ github.event.number }}
          GITHUB_BRANCH: ${{ github.head_ref }}
